from typing import Any, Dict, List, Union

from rich import print as print

from . import cache as cache
from .target_object.college import ColController as ColController
from .target_object.course_category import CatController as CatController
from .target_object.degree_type import DegController as DegController
from .target_object.department import DepController as DepController
from .target_object.meta_object import College as College
from .target_object.meta_object import CourseCategory as CourseCategory
from .target_object.meta_object import DegreeType as DegreeType
from .target_object.meta_object import Department as Department
from .target_object.meta_object import Semester as Semester
from .types import JSONType as JSONType

Controller = Union[DegController, CatController, ColController, DepController]
Param = Union[Semester, DegreeType, CourseCategory, College, Department]

class DepManager:
    sem: Any = ...
    reuse: Any = ...
    dep_list: Any = ...
    save_path: Any = ...
    def __init__(self, sem: Semester, reuse: bool = ...) -> None: ...
    def run(self) -> None: ...
    def load_from_cache(self) -> None: ...
    prog: Any = ...
    def load_from_crawl(self) -> None: ...
    def create_controller(self, step: int, **kwargs: Any) -> Controller: ...
    def add_param(
        self, new_param: Param, step: int, **kwargs: Any
    ) -> Dict[str, Any]: ...
    def crawl(self, step: int = ..., **kwargs: Any) -> Any: ...
    def dump(self) -> None: ...
    def get_deps(self) -> List[Department]: ...
